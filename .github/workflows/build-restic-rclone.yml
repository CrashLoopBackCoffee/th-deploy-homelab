name: Build and Publish Restic+Rclone Docker Image

on:
  push:
    paths:
      - 'services/paperless/docker/**'
      - 'services/paperless/Pulumi.prod.yaml'
      - '.github/workflows/build-restic-rclone.yml'
    branches:
      - main
  pull_request:
    paths:
      - 'services/paperless/docker/**'
      - 'services/paperless/Pulumi.prod.yaml'
      - '.github/workflows/build-restic-rclone.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: crashloopbackcoffee/restic-rclone

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract versions from config
        id: versions
        run: |
          RESTIC_VERSION=$(grep 'restic-version:' services/paperless/Pulumi.prod.yaml | awk '{print $2}')
          RCLONE_VERSION=$(grep 'rclone-version:' services/paperless/Pulumi.prod.yaml | awk '{print $2}')
          echo "restic_version=${RESTIC_VERSION}" >> $GITHUB_OUTPUT
          echo "rclone_version=${RCLONE_VERSION}" >> $GITHUB_OUTPUT
          # Create a composite version tag
          echo "image_tag=restic-${RESTIC_VERSION}-rclone-${RCLONE_VERSION}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ steps.versions.outputs.image_tag }}
            type=ref,event=pr

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: services/paperless/docker
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            RESTIC_VERSION=${{ steps.versions.outputs.restic_version }}
            RCLONE_VERSION=${{ steps.versions.outputs.rclone_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
