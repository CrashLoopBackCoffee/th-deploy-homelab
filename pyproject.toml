[project]
name = "homelab"
version = "0.1.0"
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    # Fixed pulumi deps for global pinning
    "pulumi-cloudflare==6.4.1",
    "pulumi-command==1.1.0",
    "pulumi-docker==4.8.0",
    "pulumi-kubernetes==4.23.0",
    "pulumi-minio==0.16.5",
    "pulumi-onepassword==1.1.3",
    "pulumi-proxmoxve==7.0.0",
    "pulumi-random==4.18.3",
    "pulumi==3.187.0",

    # Workspaces
    "ingress",
    "iot",
    "kubernetes",
    "monitoring",
    "obsidian",
    "ollama",
    "paperless",
    "proxmox",
    "s3",
    "unifi",
]

[dependency-groups]
dev = [
    "distlib>=0.3.9",
    "filelock>=3.16.1",
    "platformdirs>=4.3.6",
    "pre-commit>=4.0.1",
    "pyright>=1.1.390",
    "ruff>=0.8.2",
    "yamllint>=1.35.1",
]

[tool.uv.sources]
ingress = { workspace = true }
iot = { workspace = true }
kubernetes = { workspace = true }
monitoring = { workspace = true }
obsidian = { workspace = true }
ollama = { workspace = true }
paperless = { workspace = true }
proxmox = { workspace = true }
s3 = { workspace = true }
unifi = { workspace = true }
utils = { workspace = true }

[tool.uv]
package = false

[tool.uv.workspace]
members = ["services/*", "utils"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100
target-version = "py312"
extend-exclude = ["docs/examples"]

[tool.ruff.lint]
extend-select = [
    "A",      # flake8-builtins
    "C4",     # flake8-comprehensions
    "ERA",    # flake8-eradicate (commented out code)
    "G",      # flake8-logging-format
    "I",      # isort
    "ISC",    # flake8-implicit-str-concat
    "PL",     # Pylint
    "RET",    # flake8-return
    "RUF100", # unused noqa
    "SLF",    # flake8-self
]
ignore = [
    "ISC001",  # single line string concat
    "PLR0912", # too many branches
    "PLR0913", # too many arguments
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
    "PLR1711", # useless return
]

[tool.ruff.lint.isort]
lines-between-types = 1

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "SLF001", # allow access to private members in tests
]

[tool.ruff.format]
quote-style = "single"

[tool.pyright]
deprecateTypingAliases = true
useLibraryCodeForTypes = true
exclude = [
    "__pycache__",
    ".venv",
    ".vscode",
    "build",
    "dist",
    "docs/examples",
    "node_modules",
    "venv",
]
reportUnnecessaryTypeIgnoreComment = true
venv = ".venv"
venvPath = "."

[tool.config-models.ingress]
root = "services/ingress"
model = "ingress.config:PulumiConfigRoot"

[tool.config-models.iot]
root = "services/iot"
model = "iot.config:PulumiConfigRoot"

[tool.config-models.kubernetes]
root = "services/kubernetes"
model = "kubernetes.config:PulumiConfigRoot"

[tool.config-models.monitoring]
root = "services/monitoring"
model = "monitoring.config:PulumiConfigRoot"

[tool.config-models.obsidian]
root = "services/obsidian"
model = "obsidian.config:PulumiConfigRoot"

[tool.config-models.paperless]
root = "services/paperless"
model = "paperless.config:PulumiConfigRoot"

[tool.config-models.proxmox]
root = "services/proxmox"
model = "proxmox.config:PulumiConfigRoot"

[tool.config-models.s3]
root = "services/s3"
model = "s3.config:PulumiConfigRoot"

[tool.config-models.ollama]
root = "services/ollama"
model = "ollama.config:PulumiConfigRoot"

[tool.config-models.unifi]
root = "services/unifi"
model = "unifi.config:PulumiConfigRoot"
