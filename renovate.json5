{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    ':dependencyDashboard',
  ],
  mode: 'full',
  lockFileMaintenance: {
    enabled: true,
  },
  customManagers: [
    // Manager which can act on versions specified as ARGs in Dockerfiles like:
    // # renovate: datasource=github-releases packageName=kyverno/kyverno versioning=loose
    // ARG KYVERNO_VERSION=1.13.0
    {
      customType: 'regex',
      managerFilePatterns: [
        '**/Dockerfile*'
      ],
      matchStrings: [
        '# renovate: datasource=(?<datasource>[a-z-]+?)(?: depName=(?<depName>.+?))? packageName=(?<packageName>.+?)(?: versioning=(?<versioning>[a-z0-9-]+?))?\\sARG \\S+?=(?<currentValue>\\S+)',
      ],
      versioningTemplate: '{{#if versioning}}{{versioning}}{{else}}semver{{/if}}',
    },
    // Manager which can act on versions specified in YAML files like:
    // # renovate: datasource=github-releases packageName=kyverno/kyverno versioning=loose
    // kyvernoVersion: 1.13.0
    {
      customType: 'regex',
      managerFilePatterns: [
        '/.*.(yaml|yml)$/',
      ],
      matchStrings: [
        '# renovate: datasource=(?<datasource>[a-z-]+?)(?: depName=(?<depName>.+?))? packageName=(?<packageName>.+?)(?: versioning=(?<versioning>[a-z0-9-]+?))?\\s+[a-zA-Z_-]+:\\s+\\"?(?<currentValue>[a-zA-Z0-9._-]+)\\"?',
      ],
      versioningTemplate: '{{#if versioning}}{{versioning}}{{else}}semver{{/if}}',
    },
  ],
  packageRules: [
    {
      groupName: 'pulumi',
      matchPackageNames: [
        '/pulumi/',
      ],
      schedule: [
        'before 10am on Monday',
      ],
    },
    {
      matchPackageNames: [
        'grafana/grafana',
      ],
      extractVersion: '^v?(?<version>.*)$',
    },
    // Extract correct package version for cloudnative-pg charts
    {
      matchPackageNames: [
        'cloudnative-pg/charts',
      ],
      extractVersion: '^cloudnative-pg-v(?<version>.*)$',
    },
    {
      // Create separate PRs per minor release line for canonical/microk8s
      matchPackageNames: [
        'canonical/microk8s',
      ],
      separateMultipleMinor: true,
    },
  ],
  prHourlyLimit: 10,
  rangeStrategy: 'replace',
}
